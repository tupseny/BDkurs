-- Table names
-- UNIVERSE ITEM PLAYER, GAMEMODE, WORD, UN_WR, PRECIPITATION, TOOL, BLOCK, BIOME, WR_BI, WEAPON, PLANT,
-- EFFECT, FOOD, DROPS, DMG_TYPE, FRIENDMODE, MOB, BI_MOB, INVENTORY

-- Creating the base
CREATE TABLE UNIVERSE(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  NAME VARCHAR(25) NOT NULL DEFAULT 'universe',
  GM_ID INT NOT NULL,
  UNIQUE (GM_ID)
);

CREATE TABLE ITEM(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  NAME varchar(25) unique NOT NULL,
  MAX_STACK SMALLINT NOT NULL CONSTRAINT stack_size_lim CHECK (MAX_STACK >= 0 AND MAX_STACK <1000) DEFAULT 64
);

CREATE TABLE PLAYER(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  NAME VARCHAR(25) NOT NULL DEFAULT 'PLAYER',
  HP SMALLINT NOT NULL,
  HUNGRY SMALLINT NOT NULL,
  EXP BIGINT NOT NULL,
  CONSTRAINT positive_hp$hungry$exp CHECK (HP >= 0 AND HUNGRY >= 0 AND EXP >= 0)
);

CREATE TABLE GAMEMODE(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  NAME VARCHAR(25) NOT NULL UNIQUE
);

CREATE TABLE WORD(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  NAME VARCHAR(25) NOT NULL DEFAULT 'WORD',
  SIZE INT CONSTRAINT pos_size CHECK (SIZE >= 0) DEFAULT NULL
);

CREATE TABLE UN_WR(
  ID INT PRIMARY KEY,
  UN_ID INT NOT NULL REFERENCES UNIVERSE ON DELETE CASCADE,
  WR_ID INT NOT NULL REFERENCES WORD ON DELETE CASCADE,
  CONSTRAINT positive_ID CHECK (ID >= 0)
);

CREATE TABLE PRECIPITATION(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  NAME VARCHAR(25) UNIQUE NOT NULL
);

CREATE TABLE TOOL(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  NAME varchar(25) unique not null
);

create table MATERIAL(
  ID int primary key constraint positive_ID check (ID >= 0),
  NAME varchar(25) unique not null,
  DUR INT NOT NULL DEFAULT -1
);

CREATE TABLE BLOCK(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  ITEM_ID INT default null REFERENCES ITEM ON DELETE CASCADE,
  MATERIAL_ID SMALLINT DEFAULT null references material on delete set null,
  TOOL_ID SMALLINT default null REFERENCES TOOL ON DELETE SET NULL
);

CREATE TABLE BIOME(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  NAME VARCHAR(25) NOT NULL DEFAULT 'BIOME',
  PREC_ID INT REFERENCES PRECIPITATION ON DELETE SET NULL,
  BL_ID INT NOT NULL REFERENCES BLOCK ON DELETE RESTRICT,
  COLOR varchar(6) default null check (COLOR like '[0-9|a-f|A-F]')
);

CREATE TABLE WR_BI(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  WR_ID INT NOT NULL REFERENCES WORD ON DELETE CASCADE,
  BI_ID INT NOT NULL REFERENCES BIOME ON DELETE CASCADE,
  CONSTRAINT pos_ID CHECK (ID >= 0)
);

CREATE TABLE WEAPON(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  DMG INT NOT NULL DEFAULT -1,
  TOOL_ID INT NOT NULL REFERENCES TOOL ON DELETE CASCADE
);

CREATE TABLE PLANT(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  GROW_TIME INTERVAL NOT NULL DEFAULT INTERVAL '1 s',
  BL_ID INT NOT NULL REFERENCES BLOCK ON DELETE CASCADE
);

CREATE TABLE INVENTORY(
  SLOT SMALLINT PRIMARY KEY CONSTRAINT slot_lim CHECK (SLOT >= 0 AND SLOT <= 36),
  ITEM_ID INT REFERENCES ITEM ON DELETE SET NULL,
  COUNT SMALLINT DEFAULT 64
);

CREATE TABLE EFFECT(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  NAME VARCHAR(25) NOT NULL UNIQUE,
  HP SMALLINT,
  HUNGRY SMALLINT,
  EXP INT
);

CREATE TABLE FOOD(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  ITEM_ID INT NOT NULL REFERENCES ITEM ON DELETE CASCADE,
  HP SMALLINT NOT NULL DEFAULT 0,
  EF_ID INT REFERENCES EFFECT ON DELETE SET NULL
);

CREATE TABLE DROPS(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  ITEM_ID INT NOT NULL REFERENCES ITEM,
  COUNT SMALLINT NOT NULL CONSTRAINT positive_count CHECK (COUNT >= 0),
  PERCENTAGE FLOAT NOT NULL CONSTRAINT percentage_interval CHECK (PERCENTAGE >== 0 AND PERCENTAGE <= 100)
);

CREATE TABLE DMG_TYPE(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  NAME VARCHAR(25) UNIQUE NOT NULL
);

CREATE TABLE FRIENDMODE(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  NAME VARCHAR(25) NOT NULL UNIQUE
);

CREATE TABLE MOB(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  NAME VARCHAR(25) UNIQUE NOT NULL,
  FM_ID INT NOT NULL REFERENCES FRIENDMODE ON DELETE SET NULL,
  HP SMALLINT NOT NULL DEFAULT -1,
  DMG SMALLINT NOT NULL DEFAULT 0,
  DROP_ID INT REFERENCES DROPS,
  ATK_ID INT REFERENCES DMG_TYPE
);

CREATE TABLE BI_MOB(
  ID INT PRIMARY KEY CONSTRAINT positive_ID CHECK (ID >= 0),
  BI_ID INT NOT NULL REFERENCES BIOME ON DELETE CASCADE,
  MOB_ID INT NOT NULL REFERENCES MOB ON DELETE CASCADE
);




